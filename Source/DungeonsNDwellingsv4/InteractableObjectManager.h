// Fill out your copyright notice in the Description page of Project Settings.

#pragma once

#include "InteractableObject.h"
#include "CoreMinimal.h"
#include "GameFramework/Actor.h"
#include "InteractableObjectManager.generated.h"

UCLASS()
class DUNGEONSNDWELLINGSV4_API AInteractableObjectManager : public AActor
{
	GENERATED_BODY()
	
public:	
	// Sets default values for this actor's properties
	AInteractableObjectManager();

protected:
	// Called when the game starts or when spawned
	virtual void BeginPlay() override;

public:	
	// Called every frame
	virtual void Tick(float DeltaTime) override;



private:
	/****************************************************************************PRIVATE VARIABLES**************************************************************************/

	//Variables to track player item relations//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	float const minimumDistanceToInteract = 120;
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	//Variables to control the transform of interactable objects////////////////////////////////////////////////////////////////////////////////////////////////////////////
	FVector objectSpawn = FVector(400, 400, 50);
	FRotator const objectRotator = FRotator(0, 0, 0);
	FVector const objectScale = FVector(1, 1, 1);
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	//Array to hold all interactable objects in scene///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	UPROPERTY(EditAnywhere)
		TArray<AInteractableObject*> interactableObjectArray;
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	
	//Track how many interactable objects have currently been spawned - max 2///////////////////////////////////////////////////////////////////////////////////////////////
	int itemSpawnedCounter;
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	//Variable to track distance between player and interactable////////////////////////////////////////////////////////////////////////////////////////////////////////////
	float distance;
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	
	//Variables from external classes - GET and SETs////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	int roomCount;
	FVector roomPlacementModifier;
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



public:
	/*******************************************************************************PUBLIC FUNCTIONS************************************************************************/

	//Functions to control object spawning//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	void SpawnInteractableObject();
	void SpawnInteractableOnComplete();
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	//Functions to control player interactions with the item block//////////////////////////////////////////////////////////////////////////////////////////////////////////
	bool CheckDistanceFromPlayer();
	bool Reroll();
	void Claim();
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	//Functions to GET and SET key variables from other classes/////////////////////////////////////////////////////////////////////////////////////////////////////////////
	void GetRoomCount();
	void GetRoomPlacementModifier();
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
};
